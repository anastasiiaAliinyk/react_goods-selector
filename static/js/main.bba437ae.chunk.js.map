{"version":3,"sources":["App.js","index.js"],"names":["preparedListGoods","map","name","index","App","addGood","goodName","setState","prevState","selectedGoods","deleteGood","filter","selectedGoodName","resetGoods","state","this","listLength","length","className","join","type","onClick","good","key","includes","bind","React","Component","ReactDOM","render","document","getElementById"],"mappings":"sOAgBMA,G,MAbkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGwCC,KAAI,SAACC,EAAMC,GAAP,MAC5C,CACED,OACAC,MAAOA,EAAQ,OA4HJC,E,kDAvHb,aAAe,IAAD,8BACZ,gBAMFC,QAAU,SAACC,GACT,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAC1BC,cAAc,GAAD,mBAAMD,EAAUC,eAAhB,CAA+BH,SATlC,EAadI,WAAa,SAACJ,GACZ,EAAKC,UAAS,SAACC,GAKb,MAAO,CACLC,cALoBD,EAAUC,cAAcE,QAC5C,SAAAC,GAAgB,OAAIA,IAAqBN,UAhBjC,EAyBdO,WAAa,WACX,EAAKN,SAAS,CAAEE,cAAe,MAxB/B,EAAKK,MAAQ,CACXL,cAAe,IAHL,E,0CA6Bd,WAAU,IAAD,OACCA,EAAkBM,KAAKD,MAAvBL,cACFO,EAAaP,EAAcQ,OAEjC,OACE,yBAAKC,UAAU,OACb,yBAAKA,UAAU,QAETF,EAEI,oCACE,4BAEmB,IAAfA,EAEI,oCACGP,EAAc,GACd,IAFH,eAMA,GAGJO,EAAa,EAET,oCACGP,EAAcU,KAAK,MACnB,IAFH,gBAMA,IAGR,4BACEC,KAAK,SACLC,QAASN,KAAKF,WACdK,UAAU,UAHZ,UASF,kDAKRlB,EAAkBC,KAAI,SAAAqB,GAAI,OACxB,yBAAKJ,UAAU,OAAOK,IAAKD,EAAKnB,OAE3BM,EAAce,SAASF,EAAKpB,MAExB,oCACE,0BAAMgB,UAAU,YACbI,EAAKpB,MAER,4BACEkB,KAAK,SACLC,QAAS,EAAKX,WAAWe,KAAK,KAAMH,EAAKpB,MACzCgB,UAAU,sBAHZ,WAUF,oCACE,8BACGI,EAAKpB,MAER,4BACEkB,KAAK,SACLC,QAAS,EAAKhB,QAAQoB,KAAK,KAAMH,EAAKpB,MACtCgB,UAAU,UAHZ,oB,GAtGLQ,IAAMC,WCnBxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.bba437ae.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst preparedListGoods = goodsFromServer.map((name, index) => (\n  {\n    name,\n    index: index + 1,\n  }\n));\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      selectedGoods: [],\n    };\n  }\n\n  addGood = (goodName) => {\n    this.setState(prevState => ({\n      selectedGoods: [...prevState.selectedGoods, goodName],\n    }));\n  }\n\n  deleteGood = (goodName) => {\n    this.setState((prevState) => {\n      const filteredGoods = prevState.selectedGoods.filter(\n        selectedGoodName => selectedGoodName !== goodName,\n      );\n\n      return {\n        selectedGoods: filteredGoods,\n      };\n    });\n  }\n\n  resetGoods = () => {\n    this.setState({ selectedGoods: [] });\n  }\n\n  render() {\n    const { selectedGoods } = this.state;\n    const listLength = selectedGoods.length;\n\n    return (\n      <div className=\"App\">\n        <div className=\"wrap\">\n          {\n              listLength\n                ? (\n                  <>\n                    <h1>\n                      {\n                        listLength === 1\n                          ? (\n                            <>\n                              {selectedGoods[0]}\n                              {' '}\n                              is selected\n                            </>\n                          )\n                          : ''\n                      }\n                      {\n                        listLength > 1\n                          ? (\n                            <>\n                              {selectedGoods.join(', ')}\n                              {' '}\n                              are selected\n                            </>\n                          )\n                          : ''\n                      }\n                    </h1>\n                    <button\n                      type=\"button\"\n                      onClick={this.resetGoods}\n                      className=\"button\"\n                    >\n                      Reset\n                    </button>\n                  </>\n                )\n                : <h1>No goods selected</h1>\n            }\n        </div>\n\n        {\n          preparedListGoods.map(good => (\n            <div className=\"wrap\" key={good.index}>\n              {\n                 selectedGoods.includes(good.name)\n                   ? (\n                     <>\n                       <span className=\"selected\">\n                         {good.name}\n                       </span>\n                       <button\n                         type=\"button\"\n                         onClick={this.deleteGood.bind(null, good.name)}\n                         className=\"button button--red\"\n                       >\n                         Delete\n                       </button>\n                     </>\n                   )\n                   : (\n                     <>\n                       <span>\n                         {good.name}\n                       </span>\n                       <button\n                         type=\"button\"\n                         onClick={this.addGood.bind(null, good.name)}\n                         className=\"button\"\n                       >\n                         Select\n                       </button>\n                     </>\n                   )\n              }\n            </div>\n          ))\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}