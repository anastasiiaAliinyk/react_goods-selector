{"version":3,"sources":["App.js","index.js"],"names":["preparedListGoods","map","name","index","App","state","selectedGoods","addGood","goodName","setState","prevState","deleteGood","filter","selectedGoodName","resetGoods","showTitleText","goodsLength","this","listLength","length","className","join","type","onClick","good","key","includes","React","Component","ReactDOM","render","document","getElementById"],"mappings":"sOAgBMA,G,MAbkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGwCC,KAAI,SAACC,EAAMC,GAAP,MAC5C,CACED,OACAC,MAAOA,EAAQ,OAqGJC,E,4MAhGbC,MAAQ,CACNC,cAAe,I,EAGjBC,QAAU,SAACC,GACT,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAC1BJ,cAAc,GAAD,mBAAMI,EAAUJ,eAAhB,CAA+BE,S,EAIhDG,WAAa,SAACH,GACZ,EAAKC,UAAS,SAACC,GAKb,MAAO,CACLJ,cALoBI,EAAUJ,cAAcM,QAC5C,SAAAC,GAAgB,OAAIA,IAAqBL,U,EAS/CM,WAAa,WACX,EAAKL,SAAS,CAAEH,cAAe,M,EAGjCS,cAAgB,SAAAC,GAAW,OAAKA,EAAc,EAC1C,eACA,e,4CAEJ,WAAU,IAAD,OACCV,EAAkBW,KAAKZ,MAAvBC,cACFY,EAAaZ,EAAca,OAEjC,OACE,yBAAKC,UAAU,OACb,yBAAKA,UAAU,QAEXF,EAEI,oCACE,4BACGZ,EAAce,KAAK,MACnB,IACAJ,KAAKF,cAAcG,IAEtB,4BACEI,KAAK,SACLC,QAASN,KAAKH,WACdM,UAAU,UAHZ,UASF,kDAKNpB,EAAkBC,KAAI,SAAAuB,GAAI,OACxB,yBAAKJ,UAAU,OAAOK,IAAKD,EAAKrB,OAC9B,0BACEiB,UAAWd,EAAcoB,SAASF,EAAKtB,MAAQ,WAAa,IAE3DsB,EAAKtB,MAGNI,EAAcoB,SAASF,EAAKtB,MAExB,4BACEoB,KAAK,SACLC,QAAS,kBAAM,EAAKZ,WAAWa,EAAKtB,OACpCkB,UAAU,sBAHZ,UASA,4BACEE,KAAK,SACLC,QAAS,kBAAM,EAAKhB,QAAQiB,EAAKtB,OACjCkB,UAAU,UAHZ,mB,GAhFFO,IAAMC,WCnBxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.d9ff62f6.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst preparedListGoods = goodsFromServer.map((name, index) => (\n  {\n    name,\n    index: index + 1,\n  }\n));\n\nclass App extends React.Component {\n  state = {\n    selectedGoods: [],\n  };\n\n  addGood = (goodName) => {\n    this.setState(prevState => ({\n      selectedGoods: [...prevState.selectedGoods, goodName],\n    }));\n  }\n\n  deleteGood = (goodName) => {\n    this.setState((prevState) => {\n      const filteredGoods = prevState.selectedGoods.filter(\n        selectedGoodName => selectedGoodName !== goodName,\n      );\n\n      return {\n        selectedGoods: filteredGoods,\n      };\n    });\n  }\n\n  resetGoods = () => {\n    this.setState({ selectedGoods: [] });\n  }\n\n  showTitleText = goodsLength => (goodsLength > 1\n    ? 'are selected'\n    : 'is selected')\n\n  render() {\n    const { selectedGoods } = this.state;\n    const listLength = selectedGoods.length;\n\n    return (\n      <div className=\"App\">\n        <div className=\"wrap\">\n          {\n            listLength\n              ? (\n                <>\n                  <h1>\n                    {selectedGoods.join(', ')}\n                    {' '}\n                    {this.showTitleText(listLength)}\n                  </h1>\n                  <button\n                    type=\"button\"\n                    onClick={this.resetGoods}\n                    className=\"button\"\n                  >\n                    Reset\n                  </button>\n                </>\n              )\n              : <h1>No goods selected</h1>\n          }\n        </div>\n\n        {\n          preparedListGoods.map(good => (\n            <div className=\"wrap\" key={good.index}>\n              <span\n                className={selectedGoods.includes(good.name) ? 'selected' : ''}\n              >\n                {good.name}\n              </span>\n              {\n                selectedGoods.includes(good.name)\n                  ? (\n                    <button\n                      type=\"button\"\n                      onClick={() => this.deleteGood(good.name)}\n                      className=\"button button--red\"\n                    >\n                      Delete\n                    </button>\n                  )\n                  : (\n                    <button\n                      type=\"button\"\n                      onClick={() => this.addGood(good.name)}\n                      className=\"button\"\n                    >\n                      Select\n                    </button>\n                  )\n              }\n            </div>\n          ))\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}